package com.sys.wx.web;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONArray;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.org.rapid_framework.web.scope.Flash;

import com.platform.common.data.CommonUtil;
import com.platform.common.servlet.RequestParameter;
import com.sys.wx.service.ProductAttrService;


/**
 * 
 * 商品属性信息
 * @author    yl
 * @version   V1.00 2015-10-15[版本号, YYYY-MM-DD]
 * @see       [相关类/方法]
 * @since     TP V1.0R001 [产品/模块版本]
 */
@Controller
@RequestMapping("/productAttrController")
public class ProductAttrController
{
    private static Logger log = Logger.getLogger(ProductAttrController.class);

    @Autowired
    private ProductAttrService productAttrService;

    /**
     * 跳转到分类首页
     * @param request
     * @return String
     */
    @RequestMapping("/index")
    public String index(HttpServletRequest request)
    {
        Flash.current().put("menuTreeJson",
            JSONArray.fromObject(this.loadTypeTreeMenu(request)).toString(3));
        return "/wx/productAttr/index";
    }

    /**
     * 跳转到分配物料页
     * @param request
     * @return String
     */
    @RequestMapping("/allot")
    public String allotAttr(HttpServletRequest request)
    {
        Flash.current().put("menuTreeJson",
            JSONArray.fromObject(this.loadTypeTreeMenu(request)).toString(3));
        return "/wx/product/allotAttr";
    }

    public String loadTypeTreeMenu(HttpServletRequest request)
    {
        List<Map<String, Object>> menuList = productAttrService.findTypeMenus();
        return CommonUtil.toJSONString(menuList);
    }

    /**
     * 根据分类id查询属性列表
     * @param request
     * @return String
     */
    @RequestMapping("/queryAttrInfoList")
    public String queryAttrInfoList(ModelMap model, HttpServletRequest request)
    {
        model.put("attrMap", productAttrService.queryAttrInfoList(request));
        String type = request.getParameter("type");
        model.put("type", type);
        String at_id = RequestParameter.getString(request, "at_id");
        model.put("at_id", at_id);

        String FNumber = RequestParameter.getString(request, "FNumber");
        model.put("FNumber", FNumber);
        String A_NAME = RequestParameter.getString(request, "A_NAME");
        model.put("A_NAME", A_NAME);

        return "/wx/productAttr/attrList";
    }

    /**
     * 查询未分配类型的属性列表
     * @param request
     * @return String
     */
    @RequestMapping("/queryAttrByNoTypeList")
    public String queryAttrByNoTypeList(ModelMap model,
                                        HttpServletRequest request)
    {
        model.put("attrMap", productAttrService.queryAttrByNoTypeList(request));
        String type = request.getParameter("type");
        model.put("type", type);
        String FNumber = RequestParameter.getString(request, "FNumber");
        model.put("FNumber", FNumber);
        String A_NAME = RequestParameter.getString(request, "A_NAME");
        model.put("A_NAME", A_NAME);
        return "/wx/productAttr/attrList";
    }

    /**
     *  跳转到修改页面
     *  @author yl
     */
    @RequestMapping(value = "/edit")
    public String editNode(ModelMap model, HttpServletRequest request,
                           HttpServletResponse response)
    {
        Map<String, Object> attrTypeMap = productAttrService.queryAttrById(request);
        model.put("attrMap", attrTypeMap);
        Flash.current().put("menuTreeJson",
            JSONArray.fromObject(this.loadTypeTreeMenu(request)).toString(3));
        return "/wx/productAttr/edit";
    }

    /**
     *  修改
     *  @author yl
     */
    @ResponseBody
    @RequestMapping(value = "/update")
    public String update(ModelMap model, HttpServletRequest request,
                         HttpServletResponse response)
    {
        String flag = productAttrService.update(request);
        return flag;
    }

}
