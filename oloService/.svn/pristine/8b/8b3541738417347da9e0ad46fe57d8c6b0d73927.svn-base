package com.sys.web.web;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONArray;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.org.rapid_framework.web.scope.Flash;

import com.platform.common.data.CommonUtil;
import com.platform.common.servlet.RequestParameter;
import com.sys.web.service.CaseService;


/**
 * 案例管理
 * @author yl
 */
@Controller
@RequestMapping("/caseAction")
public class CaseAction
{
    @Autowired
    private CaseService caseService;

    /**
     *  加载菜单 
     *  @author yl
     *  
     */
    @RequestMapping(value = "/index")
    public String main(ModelMap model, HttpServletRequest request,
                       HttpServletResponse response)
    {
        Flash.current().put("menuTreeJson",
            JSONArray.fromObject(this.loadTreeMenu(request)).toString(3));
        return "/basic/case/index";
    }

    public String loadTreeMenu(HttpServletRequest request)
    {
        List<Map<String, Object>> menuList = caseService.findMenus();
        return CommonUtil.toJSONString(menuList);
    }

    /**
     *  根据分类查询案例
     *  @author yl
     */
    @RequestMapping(value = "/queryCaseByTypeId")
    public String queryCaseByTypeId(ModelMap model, HttpServletRequest request,
                                    HttpServletResponse response)
    {
        Map<String, Object> map = caseService.queryCaseByTypeId(request);
        int ct_id = RequestParameter.getInt(request, "ct_id");
        String c_name = RequestParameter.getString(request, "c_name");
        model.put("caseMap", map);
        model.put("ct_id", ct_id);
        model.put("c_name", c_name);
        return "/basic/case/caseIndex";
    }

    /** 
     *  跳转到增加界面
     *  @author yl
     */
    @RequestMapping(value = "/addPage")
    public String addPage(ModelMap model, HttpServletRequest request,
                          HttpServletResponse response)
    {
        String ct_id = RequestParameter.getString(request, "ct_id");
        model.put("ct_id", ct_id);
        return "/basic/case/add";
    }

    /** 
     *  增加
     *  @author yl
     */
    @RequestMapping(value = "/saveCase")
    public String saveCase(ModelMap model, HttpServletRequest request,
                           HttpServletResponse response)
    {
        model.put("flag", caseService.saveCase(request));
        String ct_id = RequestParameter.getString(request, "ct_id");
        model.put("ct_id", ct_id);
        return "/basic/case/add";
    }

    /** 
     *  增加
     *  @author yl
     */
    @RequestMapping(value = "/editCase")
    public String editCase(ModelMap model, HttpServletRequest request,
                           HttpServletResponse response)
    {
        model.put("flag", caseService.editCase(request));
        String ct_id = RequestParameter.getString(request, "ct_id");
        model.put("ct_id", ct_id);
        String c_id = RequestParameter.getString(request, "c_id");
        model.put("c_id", c_id);
        return "/basic/case/edit";
    }

    /** 
     *  跳转到编辑界面
     *  @author yl
     */
    @RequestMapping(value = "/queryCaseById")
    public String queryCaseById(ModelMap model, HttpServletRequest request,
                                HttpServletResponse response)
    {
        model.put("caseMap", caseService.queryCaseById(request));
        String ct_id = RequestParameter.getString(request, "ct_id");
        model.put("ct_id", ct_id);
        String c_id = RequestParameter.getString(request, "c_id");
        model.put("c_id", c_id);
        return "/basic/case/edit";
    }

    /**
     * 
     *删除案例
     * @param model
     * @param request
     * @param response
     * @return String
     */
    @ResponseBody
    @RequestMapping(value = "/delCase")
    public String delCase(ModelMap model, HttpServletRequest request,
                          HttpServletResponse response)
    {
        String flag = caseService.delCase(request);
        return flag;
    }

    /** 
     *  跳转到图片界面
     *  @author yl
     */
    @RequestMapping(value = "/toPicPage")
    public String toPicPage(ModelMap model, HttpServletRequest request,
                            HttpServletResponse response)
    {
        model.put("caseList", caseService.queryCasePicByCId(request));
        String c_id = RequestParameter.getString(request, "c_id");
        model.put("c_id", c_id);
        return "/basic/case/picIndex";
    }

    /** 
     *  跳转到图片界面
     *  @author yl
     */
    @RequestMapping(value = "/savePic")
    public String savePic(ModelMap model, HttpServletRequest request,
                          HttpServletResponse response)
    {
        model.put("flag", caseService.savePic(request));
        String c_id = RequestParameter.getString(request, "c_id");
        model.put("c_id", c_id);
        return "/basic/case/picIndex";
    }

    /**
     * 
     *删除案例图片
     * @param model
     * @param request
     * @param response
     * @return String
     */
    @ResponseBody
    @RequestMapping(value = "/delCasePic")
    public String delCasePic(ModelMap model, HttpServletRequest request,
                             HttpServletResponse response)
    {
        String flag = caseService.delCasePic(request);
        return flag;
    }

}