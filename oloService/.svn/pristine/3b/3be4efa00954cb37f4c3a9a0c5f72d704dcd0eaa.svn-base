package com.sys.wx.web;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.platform.common.data.CommonUtil;
import com.sys.wx.service.ProAttrTypeService;
import com.sys.wx.service.ProductService;
import com.sys.wx.service.ProductTypeService;


@Controller
@RequestMapping("/product")
public class ProductController
{

    @Autowired
    private ProductService ProductService;
    @Autowired
    private ProductTypeService productTypeService;
    @Autowired
    private ProAttrTypeService proAttributeTypeService;

    @RequestMapping("/index")
    public String getProduct(ModelMap model, HttpServletRequest request)
    {
        model.put("menuTreeJson",
            JSONArray.fromObject(this.loadTreeMenu(request)).toString(3));
        return "/wx/product/productIndex";
    }

    @RequestMapping("/list")
    public String listProduct(ModelMap model, HttpServletRequest request,
                              Integer MT_TYPE, String MT_NAME, String P_SN,
                              String P_NAME)
    {
        Map<String, Object> productMap = ProductService.queryProductList(
            request, MT_TYPE, P_SN, P_NAME);

        model.put("productMap", productMap);
        model.put("MT_NAME", MT_NAME);
        model.put("MT_TYPE", MT_TYPE);
        model.put("P_SN", P_SN);
        model.put("P_NAME", P_NAME);
        return "/wx/product/productList";
    }

    public String loadTreeMenu(HttpServletRequest request)
    {
        List<Map<String, Object>> menuList = productTypeService.findMenus();
        return CommonUtil.toJSONString(menuList);
    }

    /**
     *  保存商品
     *  @author
     */
    @RequestMapping(value = "/add")
    public String saveProduct(ModelMap model, HttpServletRequest request,
                              Integer MT_TYPE, String MT_NAME)
    {
        System.out.println(MT_NAME);
        if ("GET".equalsIgnoreCase(request.getMethod()))
        {
            model.put("MT_NAME", MT_NAME);
            model.put("MT_TYPE", MT_TYPE);
        }
        else
        {
            Integer flag = ProductService.saveProduct(request);
            model.put("flag", flag);
        }
        return "/wx/product/productAdd";

    }

    /**
     * 根据id查询出商品
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping("/query")
    public ModelAndView queryProduct(HttpServletRequest request)
        throws Exception
    {
        Map<String, Object> mapData = ProductService.queryProduct(request);
        Integer mtType = 0;
        if (null != mapData.get("MT_TYPE"))
        {
            mtType = Integer.parseInt(mapData.get("MT_TYPE").toString());
        }
        String attr = "";
        if (null != mapData.get("P_ATTRIBUTE"))
        {
            attr = mapData.get("P_ATTRIBUTE").toString();
        }
        //轮播图初始化
        List<String> picList = new ArrayList<String>(5);
        if (null != mapData.get("P_PIC"))
        {
            String pic = mapData.get("P_PIC").toString();
            String[] picTemp = pic.split(",");
            for (int i = 0; i < picTemp.length; i++ )
            {
                picList.add(picTemp[i]);
            }
            //不足5个时初始化5个
            if (picTemp.length < 5)
            {
                for (int i = 0; i < 5 - picTemp.length; i++ )
                {
                    picList.add("");
                }
            }
        }
        String attribute = proAttributeTypeService.getAttributeByPro(mtType,
            attr);
        request.setAttribute("attr", attribute);
        request.setAttribute("picList", picList);
        request.setAttribute("menuTreeJson",
            JSONArray.fromObject(this.loadTreeMenu(request)).toString(3));
        return new ModelAndView("/wx/product/productEdit", mapData);
    }

    /**
     * 根据id修改信息
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping("/update")
    public String updateProduct(ModelMap model, HttpServletRequest request)
        throws Exception
    {
        int flag = ProductService.updateProduct(request);
        model.put("flag", flag);
        return "/wx/product/productEdit";
    }

    /**
     * 删除商品
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @SuppressWarnings("unchecked")
    @ResponseBody
    @RequestMapping("/del")
    public Map delProduct(HttpServletRequest request)
        throws Exception
    {
        String flag = ProductService.deleteProduct(request);
        Map map = new HashMap();
        map.put("flag", flag);
        return map;
    }

}
