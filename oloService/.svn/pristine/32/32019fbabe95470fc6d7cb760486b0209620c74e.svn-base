package com.amiba.util;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

@Controller
@RequestMapping("/file")
public class FileUpload {
	private static String FILE_PATH = "/images/olthumb/";
	private static String PATH = new File("/").getAbsolutePath();

	@RequestMapping("/upload")
	@ResponseBody
	public String uploadFile(HttpServletRequest request,
			HttpServletResponse response) throws IOException {
		// 先删除
		deleteFile(request);
		// 上传处理
		MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;
//		String dir = PATH + multipartRequest.getContextPath();
		String dir = multipartRequest.getRealPath("/");
		request.getSession().setAttribute("filepath", PATH);
		Iterator<String> fileNames = multipartRequest.getFileNames();
		MultipartFile multipartFile = multipartRequest.getFile(fileNames.next());
		String fileAlias = multipartFile.getName();
		System.out.println("Spring MVC获得的文件名：" + fileAlias);
		// 获得文件原始名称
		String name = multipartFile.getOriginalFilename();
		//构建路径
		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMM");
		String yymm = sdf.format(new Date());
		// 相对路径，用于做返回值
		String uploadPath = dir + FILE_PATH + yymm + "/";
		String msg = "";
		try {
			String fileName = saveFile(uploadPath, name,multipartFile.getBytes());
			msg = FILE_PATH + yymm + "/" + fileName;
		} catch (Exception e) {
			msg = "error";
		}
		System.out.println(msg);
		// request.setAttribute("map", CommonUtil.toJSONString(map));
		return msg;
	}

	@SuppressWarnings("deprecation")
	@RequestMapping("/del")
	@ResponseBody
	public String deleteFile(HttpServletRequest request) throws IOException {
		String msg = "error";
		String img = request.getParameter("img");
		String dir = request.getRealPath("/");
		//String filePath = dir + FILE_PATH;
		if (null != img && !"".equals(img.trim())) {
			File file = new File(dir + img);
			if (file.exists()) {
				boolean d = file.delete();
				if (d) {
					msg = "success";
				}
			}else{
				msg = "文件不存在";
			}
		}
		return msg;
	}

	// 保存文件的方法
	public String saveFile(String uploadPath, String name, byte[] content)
			throws IOException {
		String fileName = "";
		BufferedOutputStream bos = null;
		// 创建文件夹
		try {
			File file = new File(uploadPath+name);
			//文件重命名 
			fileName = getUploadFileName(file);
			File newFile = new File(uploadPath + fileName);
			// 创建文件夹
			if (!newFile.getParentFile().exists()) {
		        //文件路径不存在时，创建保存文件所需要的路径
				newFile.getParentFile().mkdirs();
		    }
			// 创建文件（这是个空文件，用来写入上传过来的文件的内容）
			//用新命名的文件上传
			newFile.createNewFile();
			bos = new BufferedOutputStream(new FileOutputStream(newFile));
			bos.write(content);
		} catch (FileNotFoundException e) {
			throw new FileNotFoundException("文件不存在。");
		} finally {
			if (null != bos) {
				bos.close();
			}
		}
		return fileName;
	}

	private String getUploadFileName(File item) {
		// 获取路径名
		String value = item.getName();
		// 索引到最后一个反斜杠
		int start = value.lastIndexOf("\\");
		// 截取 上传文件的 字符串名字，加1是 去掉反斜杠，
		String filename = value.substring(start + 1);

		String rname = System.currentTimeMillis() + "";// 取得当前时间，Date()是java.util包里的，这作为真实名称
		int i = filename.lastIndexOf(".");// 原名称里倒数第一个"."在哪里
		String ext = filename.substring(i + 1);// 取得后缀，及"."后面的字符
		filename = rname + "." + ext;
		return filename;
	}
}
